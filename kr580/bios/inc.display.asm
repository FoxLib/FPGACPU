
cursor_xy:      defb    0, 0            ; Текущее положение курсора
cursor_attr:    defb    0               ; Текущий цветовой атрибут

; ----------------------------------------------------------------------
; Процедура очистки экрана, в регистре A атрибут
; ----------------------------------------------------------------------

cls:        ld      hl, $4000
            ld      b, $00
            ld      c, a
            ld      (cursor_attr), a
p1m1:       ld      (hl), b
            inc     l
            jr      nz, p1m1
            inc     h
            ld      a, h
            cp      $5B
            ret     z
            cp      $58
            jr      nz, p1m1
            ld      b, c
            jr      p1m1

; ----------------------------------------------------------------------
; Печать символа A, позиция B=Y, C=X
; ----------------------------------------------------------------------

prn:        push    hl
            push    de
            push    bc

            ; Вычисление позиции символа в таблице символов
            sub     a, $20
            ld      h, 0
            ld      l, a
            add     hl, hl
            add     hl, hl
            add     hl, hl
            ld      de, fonts
            add     hl, de
            ex      de, hl

            ; Расчет позиции HL
            ld      a, c
            and     0x1F
            ld      l, a    ; L = X & 31
            ld      a, b
            and     0x07    ; Нужно ограничить 3 битами
            rrca            ; Легче дойти с [0..2] до позиции [5..7]
            rrca            ; Если вращать направо
            rrca            ; ... три раза
            or      l       ; Объединив с 0..4 уже готовыми ранее
            ld      l, a    ; Загрузить новый результат в L
            ld      a, b    ; Т.к. Y[3..5] уже на месте
            and     0x18    ; Его двигать даже не надо
            or      0x40    ; Ставим видеоадрес $4000
            ld      h, a    ; И загружаем результат

            ; Рисование
            ld      b, 8
p2m1:       ld      a, (de)
            ld      (hl), a
            inc     de
            inc     h
            djnz    p2m1

            pop     bc
            pop     de
            pop     hl
            ret

; ----------------------------------------------------------------------
; Вычисление 32*Y + X -> HL, AF затронуто
; ----------------------------------------------------------------------

attrpl:     push    de
            ld      hl, (cursor_xy)
            ld      e, l
            ld      l, h
            ld      d, 0
            ld      h, 0
            add     hl, hl
            add     hl, hl
            add     hl, hl
            add     hl, hl
            add     hl, hl      ; 32*Y
            add     hl, de      ; HL = 32*Y + X
            ld      a, h
            add     $58
            ld      h, a
            pop     de
            ret

; ----------------------------------------------------------------------
; Ставится атрибут в позицию курсора
; ----------------------------------------------------------------------

setat:      push    af
            push    hl
            call    attrpl
            ld      a, (cursor_attr)
            ld      (hl), a
            pop     hl
            pop     af
            ret

; ----------------------------------------------------------------------
; Печать символа A в режиме телетайпа с прокруткой вверх
; ----------------------------------------------------------------------

prnc:       push    bc
            push    de
            push    hl

            ; Текущая позиция курсора
            ld      hl, (cursor_xy) ; Текущий курсор -> BC
            ld      b, h
            ld      c, l
            cp      13              ; ENTER?
            jr      z, p3m2

            call    setat           ; Установка атрибута
            call    prn             ; Печать символа

            inc     l
            ld      a, l
            cp      $20
            jr      nz, p3m1        ; Достиг правого края
p3m2:       ld      l, $00
            inc     h
            ld      a, h
            cp      $18             ; Достиг нижней границы
            jr      nz, p3m1

                ; @todo scroll up

p3m1:       ld      (cursor_xy), hl
            pop     hl
            pop     de
            pop     bc
            ret

; ----------------------------------------------------------------------
; Печать строки из DE в режиме телетайпа
; ----------------------------------------------------------------------

print:      ld      a, (de)
            inc     de
            and     a
            ret     z
            call    prnc
            jr      print

; ----------------------------------------------------------------------
; Обработчик прерывания RST #10
; ----------------------------------------------------------------------

rst10:      ; Сохранение регистров A,BC,DE,HL
            ld      (reg_a),  a
            ex      (sp), hl            ; HL-адрес возврата
            ld      a, (hl)             ; Прочесть следующий байт за RST
            inc     hl                  ; Новый адрес возврата
            ex      (sp), hl
            push    de                  ; Сохранить DE
            ld      h, 0
            ld      l, a                ; Вычислить адрес перехода
            add     hl, hl
            ld      de, r10_lookup
            add     hl, de
            ld      e, (hl)
            inc     hl
            ld      d, (hl)
            ex      de, hl
            pop     de
            ld      a, (reg_a)          ; Сохранены A, BC, DE (кроме HL)
            jp      (hl)

; ----------------------------------------------------------------------
; Таблица переходов для API процедур
; ----------------------------------------------------------------------

r10_lookup: defw    r10_getxy       ; 00 Чтение положения курсора в HL
            defw    r10_setxy       ; 01 Установка курсора из HL
            defw    cls             ; 02 Очистка экрана в цвет A
            defw    print           ; 03 Печать строки DE
            defw    itoa            ; 04 Конвертация числа DE -> DE
            defw    r10_read        ; 05 Чтение сектора HL:DE -> BC
            defw    r10_write       ; 06 Запись сектора из BC в HL:DE
            defw    div16u          ; 07 Деление, DE=DE / BC, HL=DE % BC

; ----------------------------------------------------------------------

r10_getxy:  ld      hl, (cursor_xy)
            ret

r10_setxy:  ld      hl, (reg_hl)
            ld      (cursor_xy), hl
            ret

r10_read:   ld      hl, (reg_hl)
            call    read
            ret

r10_write:  ld      hl, (reg_hl)
            call    write
            ret

; ШРИФТЫ
fonts:      incbin  "font.fnt"

; Псевдографика
defb        $00, $00, $ff, $00, $ff, $00, $00, $00 ; $80 =
defb        $28, $28, $28, $28, $28, $28, $28, $28 ; $81 |
defb        $00, $00, $3f, $20, $2f, $28, $28, $28 ; $82 |-
defb        $00, $00, $f8, $08, $e8, $28, $28, $28 ; $83 -|
defb        $28, $28, $2f, $20, $3f, $00, $00, $00 ; $84 |-
defb        $28, $28, $e8, $08, $f8, $00, $00, $00 ; $85 -|

; 0010 1000
; 0010 1000
; 1110 1000
; 0000 1000

; 1111 1000
; 0000 0000
; 0000 0000
; 0000 0000
