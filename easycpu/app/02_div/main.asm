
        ; Деление числа r1 на r2
        ldi     r1, 5234
        ldi     r2, 10
        call    div16mod
@@:     bra     @b

; ----------------------------------------------------------------------
; Деление r1 на r2 => r4, остаток r3
; ----------------------------------------------------------------------

div16mod:

        push    r0
        ldi     r0, 16  ; Количество итерации
        ldi     r3, 0   ; Остаток
        ldi     r4, 0   ; Результат
.L1:    shl     r4      ; Подготовка бита
        shl     r3      ; Сдвиг r3:r1 влево
        shl     r1
        bra nc, @f      ; Есть перенос?
        inc     r3
@@:     lda     r3
        sub     r2      ; Вычитаем
        bra nc, @f      ; Проверим, что r3 < r2
        add     r2      ; Вернуть обратно
        inc     r4      ; Нет переноса
@@:     sta     r3
        dec     r0
        bra nz, .L1
        xor     r4, $FFFF
        pop     r0
        ret
